from nose.tools import assert_true, assert_false, assert_equal

from ckanext.datagovuk.lib.drupal_password import (
    user_check_password,
    user_hash_password,
    password_base64_encode,
    )

def test_check_password_against_php_hash():
    password = 'pass'
    # hash generated by PHP routine
    hash_ = '$S$DRiiw/cbErl17QbvDynMsdbUGxsy5HPTXg4L1j0dlG2iOJB35XP6'
    assert_true(user_check_password(password, hash_))
    assert_false(user_check_password('wrong_password', hash_))

def test_check_password_against_our_own_hash():
    password = 'pass'
    hash_ = user_hash_password(password)

    assert_equal(hash_[:4], '$S$D')  # standard for drupal 7
    assert_equal(len(hash_), 55)
    assert_true(user_check_password(password, hash_))
    assert_false(user_check_password('wrong_password', hash_))

def test_password_base64_encode():
    # example values
    input_ = 'w<$\xdc\xb9?\xfe\x8c\xe1\xe9\tJ=\xee\x1f\xd3\xf6\x8d\xacq\r\xaf\x90\xc6\x12\xe1jUS\x1c\xe3\x86lM\xf6\xd8\x01]\xc4\x84W\xef\xb6\xb8\x9f\xeb\x06[\x85.\xafXl\xc6l\xfd\xcb\x92\x1f\xf3\x12\x95+\xcf'
    count = 64
    expected_result = 'rl17QbvDynMsdbUGxsy5HPTXg4L1j0dlG2iOJB35XP6PBNDq/o3l2SpvqWvbfPkK3umfMlalgpzmGylwGIt8D1'
    result = password_base64_encode(input_, count)

    assert_equal(len(result), 86)
    assert_equal(result, expected_result)
